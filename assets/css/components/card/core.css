/* 
 * Block 
 */

.card {

  /* Settings */
  --card-highlight-width: 4px;
  --card-resize-height: var(--grid-gap);
  --card-resize-control-height: 4px;
  --card-resize-width: var(--grid-gap);
  --card-resize-control-width: 4px;
  --card-resize-control-backgroud-color: var(--quarternary-background-color);

  /* Base Styles */
  opacity: 0;
  position: relative;
  background-color: var(--base-background-color);
  border-radius: var(--base-border-radius);
  transition: opacity var(--base-duration) var(--base-timing);
}


/* 
 * Elements
 */

/* Drag highlight */
.card::after {
  opacity: 0;
  content: "";
  position: absolute;
  z-index: 3;
  background-color: var(--hover-link-color);
  transition: opacity var(--base-duration) var(--base-timing);
}

/* Card drag indicator */
.card__drag {
  display: none;
  opacity: 0;
  position: absolute;
  z-index: 3;
  top: var(--base-spacing); 
  z-index: 2;
  left: calc(var(--base-spacing) * -2);
  transition: opacity var(--base-duration) var(--base-timing);
}

.card__drag-menu {
  display: none;
  position: absolute;
  z-index: 4;
  padding: calc(var(--base-spacing) / 2);
  background: var(--base-background-color);
  box-shadow: var(--base-box-shadow);
  border-radius: var(--secondary-border-radius);
}

/* Controls elem */
.card__controls {
  display: flex;
  flex-wrap: wrap;
  padding: var(--base-spacing) 0;
  transition: opacity var(--base-duration) var(--base-timing);
}

.card__controls-section {
  display: flex;
  padding-right: calc(var(--base-spacing) / 4);
  margin-right: calc(var(--base-spacing) / 4);
}

.card__controls-section:not(:last-child) {
  border-right: var(--base-border);
}

.card__controls-item {
  margin: 0 calc(var(--base-spacing) / 4) 0 0;
}


/* Utility elem */
.card__utility {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  min-width: calc(var(--base-spacing) * 5);
  top: calc(var(--base-spacing) / 2);
  right: 100%;
  height: 100%;
  z-index: 1;
  padding: calc(var(--base-spacing) / 2);
  transition: opacity var(--base-duration) var(--base-timing);
}

.card__utility-menu {
  display: none;
  position: absolute;
  padding: var(--base-spacing);
  background: var(--base-background-color);
  box-shadow: var(--base-box-shadow);
  border-radius: var(--secondary-border-radius);
}

.card__utility-header {
  margin: 0 0 calc(var(--base-spacing) / 3);
  color: var(--secondary-font-color);
}


/* Resize controls */
.card__resize {
  opacity: 0;
  position: absolute;
  z-index: 0;
  transition: all var(--base-duration) var(--base-timing);
}

.card__resize--bottom {
  top: 100%;
  right: calc(var(--grid-margin-inline) * -1);
  height: var(--card-resize-height);
  width: calc(100vw - var(--sidebar-width));
  cursor: ns-resize;
}

.card__resize--bottom::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 50%;
  right: 0;
  width: 100%;
  transform: translateY(-50%);
  height: var(--card-resize-control-height);
  background-color: var(--card-resize-control-backgroud-color);
}

.card__resize--right {
  opacity: 0;
  width: var(--card-resize-width);
  height: 100%;
  top: 0;
}

.card__resize--right::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: var(--card-resize-control-width);
  height: 100%;
  background-color: var(--card-resize-control-backgroud-color);
}

.card__resize--right {
  left: 100%;
}



/* 
 * Modifiers 
 */

[data-card="inactive"] {
  opacity: 0;
}

[data-card="placeholder"] {
  min-height: calc(var(--default-min-card-height) * 2);
}

[data-card="active"] {
  min-height: auto;
}

[data-card="inactive"] .card__resize,
[data-card="placeholder"] .card__resize,
[data-card="default"] .card__resize,
[data-card="default"] .card__utility {
  display: none;
}

/* Show card drag indicator once card type = `active` */
[data-card="active"] .card__drag {
  display: block;
}

/* Show card content based on card state */
[data-card="default"],
[data-card="active"] {
  opacity: 1;
}

/* Card sizing */
[data-card-size="12"] {
  grid-column: span 12;
}

[data-card-size="6"] {
  grid-column: span 6;
}

[data-card-size="4"] {
  grid-column: span 4;
}

[data-card-size="3"] {
  grid-column: span 3;
}



/* 
 * States 
 */

[data-card="placeholder"]:hover {
  opacity: 1;
}

/* Modify card styling when being dragged */
.card.is-dragging {
  opacity: 0.5;
}

/* Hide card utility when card is being dragged */
.card.is-dragging .card__utility {
  display: none;
}

/* Prevent pointer event from firing on child elems during drag */
.is-dragActive .card__content {
  pointer-events: none;
}

/* Show card highlight when card is being dragged over it */
/* .card.is-dragHovered:not(.is-dragging)::after { */
.card.is-dragHovered::after {
  opacity: 1;
}

/* Show card highlight on top side */
[data-drop-direction="top"].row-start.is-dragHovered::after {
  width: calc(calc(100vw - var(--sidebar-width)) - calc(calc(var(--grid-margin-inline)) * 2));
  height: var(--card-highlight-width);
  top: calc(calc(calc(var(--grid-gap) - var(--card-highlight-width)) / 1.5) * -1);
  left: 0;
}

/* Show card highlight on bottom side */
[data-drop-direction="bottom"].row-start.is-dragHovered::after {
  width: calc(calc(100vw - var(--sidebar-width)) - calc(calc(var(--grid-margin-inline)) * 2));
  height: var(--card-highlight-width);
  bottom: calc(calc(calc(var(--grid-gap) - var(--card-highlight-width)) / 1.5) * -1);
  left: 0;
}

/* Show card highlight on right side if target row is not full */
.grid__row:not([data-row-status="full"]) [data-drop-direction="right"].is-dragHovered::after {
  height: 100%;
  width: var(--card-highlight-width);
  top: 0;
  right: calc(calc(calc(var(--grid-gap) - var(--card-highlight-width)) / 1.5) * -1);
}

/* Show card highlight on left side if target row is not full */
.grid__row:not([data-row-status="full"]) [data-drop-direction="left"].is-dragHovered::after {
  height: 100%;
  width: var(--card-highlight-width);
  top: 0;
  left: calc(calc(calc(var(--grid-gap) - var(--card-highlight-width)) / 1.5) * -1);
}

/* Show card content on hover */
[data-card="inactive"]:hover,
.card:hover .card__drag {
  opacity: 1;
}

/* Display card utility elem on last row item only */
.grid__row:not([data-row-status="full"]):hover .card:first-child .card__utility {
  opacity: 1;
  pointer-events: auto;
}

/* Hide/show menu content elem once active state is applied */
.card:not([data-card="active"]) .card__menu {
  display: none;
}

/* Show card menu toggle on hover */
[data-card="active"]:hover .card__menu {
  display: block;
}

/* Menu/Utility toggled states */
.card__drag-menu.is-active,
.card__utility-menu.is-active {
  display: block;
}

/* Show vertical resize control on hover */
.card__resize--bottom:hover {
  opacity: 1;
}

/* Show horizontal resize control on hover */
.grid__row:not([data-row-status="full"]) .card:not(:last-child) .card__resize--right:hover {
  opacity: 1;
  cursor: ew-resize;
}